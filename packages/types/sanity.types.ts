/**
 * ---------------------------------------------------------------------------------
 * This file has been generated by Sanity TypeGen.
 * Command: `sanity typegen generate`
 *
 * Any modifications made directly to this file will be overwritten the next time
 * the TypeScript definitions are generated. Please make changes to the Sanity
 * schema definitions and/or GROQ queries if you need to update these types.
 *
 * For more information on how to use Sanity TypeGen, visit the official documentation:
 * https://www.sanity.io/docs/sanity-typegen
 * ---------------------------------------------------------------------------------
 */

// Source: schema.json
export type SanityImagePaletteSwatch = {
	_type: 'sanity.imagePaletteSwatch'
	background?: string
	foreground?: string
	population?: number
	title?: string
}

export type SanityImagePalette = {
	_type: 'sanity.imagePalette'
	darkMuted?: SanityImagePaletteSwatch
	lightVibrant?: SanityImagePaletteSwatch
	darkVibrant?: SanityImagePaletteSwatch
	vibrant?: SanityImagePaletteSwatch
	dominant?: SanityImagePaletteSwatch
	lightMuted?: SanityImagePaletteSwatch
	muted?: SanityImagePaletteSwatch
}

export type SanityImageDimensions = {
	_type: 'sanity.imageDimensions'
	height?: number
	width?: number
	aspectRatio?: number
}

export type SanityFileAsset = {
	_id: string
	_type: 'sanity.fileAsset'
	_createdAt: string
	_updatedAt: string
	_rev: string
	originalFilename?: string
	label?: string
	title?: string
	description?: string
	altText?: string
	sha1hash?: string
	extension?: string
	mimeType?: string
	size?: number
	assetId?: string
	uploadId?: string
	path?: string
	url?: string
	source?: SanityAssetSourceData
}

export type Geopoint = {
	_type: 'geopoint'
	lat?: number
	lng?: number
	alt?: number
}

export type Socials = Array<{
	name?: string
	slug?: Slug
	url?: string
	icon?: IconManager
	_type: 'social'
	_key: string
}>

export type Social = {
	_id: string
	_type: 'social'
	_createdAt: string
	_updatedAt: string
	_rev: string
	name?: string
	slug?: Slug
	url?: string
	icon?: IconManager
}

export type Posts = Array<{
	title?: string
	slug?: Slug
	publishedAt?: string
	image?: {
		asset?: {
			_ref: string
			_type: 'reference'
			_weak?: boolean
			[internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
		}
		hotspot?: SanityImageHotspot
		crop?: SanityImageCrop
		_type: 'image'
	}
	body?: string
	_type: 'post'
	_key: string
}>

export type Post = {
	_id: string
	_type: 'post'
	_createdAt: string
	_updatedAt: string
	_rev: string
	title?: string
	slug?: Slug
	publishedAt?: string
	image?: {
		asset?: {
			_ref: string
			_type: 'reference'
			_weak?: boolean
			[internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
		}
		hotspot?: SanityImageHotspot
		crop?: SanityImageCrop
		_type: 'image'
	}
	body?: string
}

export type SanityImageCrop = {
	_type: 'sanity.imageCrop'
	top?: number
	bottom?: number
	left?: number
	right?: number
}

export type SanityImageHotspot = {
	_type: 'sanity.imageHotspot'
	x?: number
	y?: number
	height?: number
	width?: number
}

export type SanityImageAsset = {
	_id: string
	_type: 'sanity.imageAsset'
	_createdAt: string
	_updatedAt: string
	_rev: string
	originalFilename?: string
	label?: string
	title?: string
	description?: string
	altText?: string
	sha1hash?: string
	extension?: string
	mimeType?: string
	size?: number
	assetId?: string
	uploadId?: string
	path?: string
	url?: string
	metadata?: SanityImageMetadata
	source?: SanityAssetSourceData
}

export type SanityAssetSourceData = {
	_type: 'sanity.assetSourceData'
	name?: string
	id?: string
	url?: string
}

export type SanityImageMetadata = {
	_type: 'sanity.imageMetadata'
	location?: Geopoint
	dimensions?: SanityImageDimensions
	palette?: SanityImagePalette
	lqip?: string
	blurHash?: string
	hasAlpha?: boolean
	isOpaque?: boolean
}

export type Slug = {
	_type: 'slug'
	current?: string
	source?: string
}

export type IconManager = {
	_type: 'icon.manager'
	icon?: string
	metadata?: IconManagerMetadata
}

export type IconManagerMetadata = {
	_type: 'icon.manager.metadata'
	downloadUrl?: string
	url?: string
	inlineSvg?: string
	collectionId?: string
	collectionName?: string
	iconName?: string
	palette?: boolean
	license?: IconManagerLicense
	author?: IconManagerAuthor
	size?: IconManagerSize
	hFlip?: boolean
	vFlip?: boolean
	rotate?: number
	color?: IconManagerColor
}

export type IconManagerLicense = {
	_type: 'icon.manager.license'
	name?: string
	url?: string
}

export type IconManagerAuthor = {
	_type: 'icon.manager.author'
	name?: string
	url?: string
}

export type IconManagerSize = {
	_type: 'icon.manager.size'
	width?: number
	height?: number
}

export type IconManagerColor = {
	_type: 'icon.manager.color'
	hex?: string
	rgba?: IconManagerColorRgba
}

export type IconManagerColorRgba = {
	_type: 'icon.manager.color.rgba'
	r?: number
	g?: number
	b?: number
	a?: number
}

export type Markdown = string

export type AllSanitySchemaTypes =
	| SanityImagePaletteSwatch
	| SanityImagePalette
	| SanityImageDimensions
	| SanityFileAsset
	| Geopoint
	| Socials
	| Social
	| Posts
	| Post
	| SanityImageCrop
	| SanityImageHotspot
	| SanityImageAsset
	| SanityAssetSourceData
	| SanityImageMetadata
	| Slug
	| IconManager
	| IconManagerMetadata
	| IconManagerLicense
	| IconManagerAuthor
	| IconManagerSize
	| IconManagerColor
	| IconManagerColorRgba
	| Markdown
export declare const internalGroqTypeReferenceTo: unique symbol
